name: CI

on:
  push:
    branches:
      - master
      - stage
      - dev/*/*
  pull_request:

env:
  GO_VERSION: '1.24.2'

jobs:
  test-deploy:
    name: Test and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build for Linux
        run: go build -ldflags "-s -w -X github.com/drakkan/sftpgo/version.commit=`git describe --always --dirty` -X github.com/drakkan/sftpgo/version.date=`date -u +%FT%TZ`" -o sftpgo

      - name: Run test cases using SQLite provider
        run: go test -v -p 1 -timeout 10m ./... -coverprofile=coverage.txt -covermode=atomic

      - name: Run test cases using bolt provider
        run: |
          go test -v -p 1 -timeout 2m ./config -covermode=atomic
          go test -v -p 1 -timeout 2m ./common -covermode=atomic
          go test -v -p 1 -timeout 3m ./httpd -covermode=atomic
          go test -v -p 1 -timeout 8m ./sftpd -covermode=atomic
          go test -v -p 1 -timeout 2m ./ftpd -covermode=atomic
          go test -v -p 1 -timeout 2m ./webdavd -covermode=atomic
          go test -v -p 1 -timeout 2m ./telemetry -covermode=atomic
        env:
          SFTPGO_DATA_PROVIDER__DRIVER: bolt
          SFTPGO_DATA_PROVIDER__NAME: 'sftpgo_bolt.db'

      - name: Run test cases using memory provider
        run: go test -v -p 1 -timeout 10m ./... -covermode=atomic
        env:
          SFTPGO_DATA_PROVIDER__DRIVER: memory
          SFTPGO_DATA_PROVIDER__NAME: ''

      - name: Prepare build artifact for Linux
        run: |
          mkdir -p output/bash_completion
          cp sftpgo output/
          cp sftpgo.json output/
          cp -r templates output/
          cp -r static output/
          cp -r init output/
          ./sftpgo gen completion bash > output/bash_completion/sftpgo
          ./sftpgo gen man -d output/man/man1
          gzip output/man/man1/*

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sftpgo-ubuntu-latest-go${{ env.GO_VERSION }}
          path: output

      - name: Build Linux Packages
        id: build_linux_pkgs
        run: |
          cd pkgs
          ./build.sh
          echo "pkg-version=$(cat dist/version)" >> "$GITHUB_OUTPUT"

      - name: Upload Debian Package
        uses: actions/upload-artifact@v4
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-x86_64-deb
          path: pkgs/dist/deb/*

      - name: Upload RPM Package
        uses: actions/upload-artifact@v4
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-x86_64-rpm
          path: pkgs/dist/rpm/*

  test-postgresql-mysql:
    name: Test with PostgreSQL/MySQL
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sftpgo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: sftpgo
          MYSQL_USER: sftpgo
          MYSQL_PASSWORD: sftpgo
        options: >-
          --health-cmd "mariadb-admin status -h 127.0.0.1 -P 3306 -u root -p$MYSQL_ROOT_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 6
        ports:
          - 3307:3306

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: go build -ldflags "-s -w -X github.com/drakkan/sftpgo/version.commit=`git describe --always --dirty` -X github.com/drakkan/sftpgo/version.date=`date -u +%FT%TZ`" -o sftpgo

      - name: Run tests using PostgreSQL provider
        run: |
          go test -v -p 1 -timeout 10m ./... -covermode=atomic
        env:
          SFTPGO_DATA_PROVIDER__DRIVER: postgresql
          SFTPGO_DATA_PROVIDER__NAME: sftpgo
          SFTPGO_DATA_PROVIDER__HOST: localhost
          SFTPGO_DATA_PROVIDER__PORT: 5432
          SFTPGO_DATA_PROVIDER__USERNAME: postgres
          SFTPGO_DATA_PROVIDER__PASSWORD: postgres

      - name: Run tests using MySQL provider
        run: |
          go test -v -p 1 -timeout 10m ./... -covermode=atomic
        env:
          SFTPGO_DATA_PROVIDER__DRIVER: mysql
          SFTPGO_DATA_PROVIDER__NAME: sftpgo
          SFTPGO_DATA_PROVIDER__HOST: localhost
          SFTPGO_DATA_PROVIDER__PORT: 3307
          SFTPGO_DATA_PROVIDER__USERNAME: sftpgo
          SFTPGO_DATA_PROVIDER__PASSWORD: sftpgo

  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          only-new-issues: true