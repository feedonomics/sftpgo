name: Docker

on:
  push:
    branches:
      - master
      - stage
      - dev
      - dev/*/*
    tags:
      - v*
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-22.04
        docker_pkg:
          - debian
          - alpine
        optional_deps:
          - true
          - false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Repo metadata
        id: repo
        uses: actions/github-script@v7
        with:
          script: |
            const repo = await github.rest.repos.get(context.repo)
            return repo.data

      - name: Gather image information
        id: info
        run: |
          VERSION=noop
          DOCKERFILE=Dockerfile
          MINOR=""
          MAJOR=""
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
          fi
          VERSION_SLIM="${VERSION}-slim"
          if [[ $DOCKER_PKG == alpine ]]; then
            VERSION="${VERSION}-alpine"
            VERSION_SLIM="${VERSION}-slim"
            DOCKERFILE=Dockerfile.alpine
          fi

          DOCKER_IMAGES=("ghcr.io/feedonomics/sftpgo")
          TAGS="${DOCKER_IMAGES[0]}:${VERSION}"
          TAGS_SLIM="${DOCKER_IMAGES[0]}:${VERSION_SLIM}"

          for DOCKER_IMAGE in ${DOCKER_IMAGES[@]}; do
            if [[ ${DOCKER_IMAGE} != ${DOCKER_IMAGES[0]} ]]; then
              TAGS="${TAGS},${DOCKER_IMAGE}:${VERSION}"
              TAGS_SLIM="${TAGS_SLIM},${DOCKER_IMAGE}:${VERSION_SLIM}"
            fi
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              if [[ $DOCKER_PKG == debian ]]; then
                if [[ -n $MAJOR && -n $MINOR ]]; then
                  TAGS="${TAGS},${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR}"
                  TAGS_SLIM="${TAGS_SLIM},${DOCKER_IMAGE}:${MINOR}-slim,${DOCKER_IMAGE}:${MAJOR}-slim"
                fi
                TAGS="${TAGS},${DOCKER_IMAGE}:latest"
                TAGS_SLIM="${TAGS_SLIM},${DOCKER_IMAGE}:slim"
              else
                if [[ -n $MAJOR && -n $MINOR ]]; then
                  TAGS="${TAGS},${DOCKER_IMAGE}:${MINOR}-alpine,${DOCKER_IMAGE}:${MAJOR}-alpine"
                  TAGS_SLIM="${TAGS_SLIM},${DOCKER_IMAGE}:${MINOR}-alpine-slim,${DOCKER_IMAGE}:${MAJOR}-alpine-slim"
                fi
                TAGS="${TAGS},${DOCKER_IMAGE}:alpine"
                TAGS_SLIM="${TAGS_SLIM},${DOCKER_IMAGE}:alpine-slim"
              fi
            fi
          done

          if [[ $OPTIONAL_DEPS == true ]]; then
            echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
            echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"
            echo "full=true" >> "$GITHUB_OUTPUT"
          else
            echo "version=${VERSION_SLIM}" >> "$GITHUB_OUTPUT"
            echo "tags=${TAGS_SLIM}" >> "$GITHUB_OUTPUT"
            echo "full=false" >> "$GITHUB_OUTPUT"
          fi
          echo "dockerfile=${DOCKERFILE}" >> "$GITHUB_OUTPUT"
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"
          echo "sha::${GITHUB_SHA=8}" >> "$GITHUB_OUTPUT"
        env:
          DOCKER_PKG: ${{ matrix.docker_pkg }}
          OPTIONAL_DEPS: ${{ matrix.optional_deps }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        if: ${{ github.event_name != 'pull_request' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.builder.outputs.name }}
          file: ./${{ steps.info.outputs.dockerfile }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.info.outputs.tags }}
          build-args: |
            COMMIT_SHA=${{ steps.info.outputs.sha }}
            INSTALL_OPTIONAL_PACKAGES=${{ steps.info.outputs.full }}
          labels: |
            org.opencontainers.image.title=SFTPGo
            org.opencontainers.image.description=Fully featured and highly configurable SFTP server with optional FTP/S and WebDAV support
            org.opencontainers.image.url=${{ fromJson(steps.repo.outputs.result).html_url }}
            org.opencontainers.image.documentation=${{ fromJson(steps.repo.outputs.result).html_url }}/blob/${{ github.sha }}/docker/README.md
            org.opencontainers.image.source=${{ fromJson(steps.repo.outputs.result).html_url }}
            org.opencontainers.image.version=${{ steps.info.outputs.version }}
            org.opencontainers.image.created=${{ steps.info.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ fromJson(steps.repo.outputs.result).license.spdx_id }}
